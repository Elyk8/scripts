#!/usr/bin/env sh
dmenu_bin() {
	dmenu -l 8 -p "Choose your new colorscheme:"
}

colorscheme_menu() {
	printf "%s\n" \
		"doom-one" \
		"darkplus" \
		"dracula" \
		"tokyonight" |
		dmenu_bin
}

alaconf="$HOME/.config/alacritty/alacritty.yml"
alacritty_change() {
	sed -i "s/^colors: .\+/colors: \*$colorscheme/" "$alaconf"
}

polyconf="$HOME/.config/polybar/config.ini"
polybar_change() {
	sed -e "s/^bg =.\+/bg = #f0$(xrdb -get background | cut -c 2-)/" \
		-e "s/^fg =.\+/fg = #$(xrdb -get foreground | cut -c 2-)/" \
		-i "$polyconf"
}

doomorg="$HOME/.config/doom/config.org"
doomconf="$HOME/.config/doom/config.el"
emacsorg="$HOME/.local/share/emacs/gnu/init.org"
emacsconf="$HOME/.local/share/emacs/gnu/init.el"
emacs_change() {
	case "$colorscheme" in
	"doom-one") theme="doom-one" ;;
	"dracula") theme="doom-dracula" ;;
	"darkplus") theme="doom-dark+" ;;
	"tokyonight") theme="doom-tokyo-night" ;;
	esac
	sed -si "s/^(setq doom-theme '.*)/(setq doom-theme '$theme)/" "$doomconf" "$doomorg"
	sed -si "s/^(elk\/load-theme '.*)/(elk\/load-theme '$theme)/" "$emacsconf" "$emacsorg"
}

xresconf="$HOME/.config/x11/Xresources"
xresources_change() {
	sed -i "s/^#include /! #include /g;/$colorscheme\.xresources/s/^!\s//" "$xresconf"
	sleep 0.1
	xrdb -merge "$xresconf"
	sleep 0.1
}


zathura_change() {
  cat <<- CONF > "$HOME/.config/zathura/zathurarc"
  set scroll-page-aware "true"
  # set smooth-scroll "true"
  set scroll-full-overlap 0.01
  set scroll-step 100

  set dbus-service true
  set synctex true
  set sandbox none

  set statusbar-h-padding 0
  set statusbar-v-padding 0
  set page-padding 1
  set selection-clipboard clipboard
  set highlight-transparency .5
  set zoom-center "true"
  map <Space> toggle_index
  map D toggle_page_mode
  map r reload
  map R rotate
  map K zoom in
  map J zoom out
  map i recolor
  map p print
  map g goto top

  set adjust-open width
  set recolor true
  set recolor-keephue             true      # keep original color

  set default-bg                  "$(xrdb -get background)" # bg
  set default-fg                  "$(xrdb -get foreground)" # fg
  set render-loading              true
  set render-loading-bg           "$(xrdb -get background)" # bg
  set render-loading-fg           "$(xrdb -get foreground)" # fg

  # Recolor book content's color
  set recolor-lightcolor          "$(xrdb -get background)" # bg
  set recolor-darkcolor           "$(xrdb -get foreground)" # fg
CONF
}

neovim_colorconf="$HOME/.config/nvim/lua/configs/colorscheme.lua"
neovim_change() {
	sed -i "s/colorscheme = .*/colorscheme = \"$colorscheme\"/g" "$neovim_colorconf"
}

appendix() {
	notify-send "Change colorscheme variable manually in gtk and qt. Restart emacs for changes to take effect."
}

colorscheme=$(colorscheme_menu)

# Don't do anything if variable is empty
if [ -z "$colorscheme" ]; then
	return 1
fi

alacritty_change
xresources_change
emacs_change
zathura_change
polybar_change
neovim_change
appendix
