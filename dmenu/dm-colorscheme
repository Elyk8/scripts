#!/bin/sh
dmenu_bin() {
	dmenu -l 8 -p "Choose your new colorscheme:"
}

colorscheme_menu() {
	printf "%s\n" \
		"doom-one" \
		"dark-plus" \
		"dracula" \
		"tokyonight" |
		dmenu_bin
}

alaconf="$HOME/.config/alacritty/alacritty.yml"
alacritty_change() {
	sed -i "s/^colors: .\+/colors: \*$colorscheme/" "$alaconf"
}

doomconf="$HOME/.config/doom/config.org"
emacsconf="/media/emacs/gnu/init.org"
emacs_change() {
	case "$colorscheme" in
		"doom-one") theme="doom-one" ;;
		"dracula") theme="doom-dracula" ;;
		"dark-plus") theme="doom-dark+" ;;
		"tokyonight") theme="doom-tokyo-night" ;;
	esac
	sed -i "s/^(setq doom-theme '.*)/(setq doom-theme '$theme)/" "$doomconf"
	sed -i "s/^(elk\/load-theme '.*)/(elk\/load-theme '$theme)/" "$emacsconf"
	emacsclient --eval "(require 'org)" --eval "(org-babel-tangle-file \"$emacsconf\")"
	/media/emacs/doom/bin/doom sync
    killall emacs
    emacs --daemon
}

xresconf="$HOME/.config/x11/Xresources"
xorgconf="$HOME/.config/x11/x.org"
xresources_change() {
	sed -i "s/^#include /! #include /g;/$colorscheme\.xresources/s/^!\s//" "$xorgconf"
	emacsclient --eval "(require 'org)" --eval "(org-babel-tangle-file \"$xorgconf\")"
	sleep 0.1
	xrdb -merge "$xresconf"
}

notify_about_neovim() {
	notify-send "Change colorscheme variable manually in neovim, gtk and qt"
}

colorscheme=$(colorscheme_menu)

# Don't do anything if variable is empty
if [ -z "$colorscheme" ]; then
	return 1
fi

alacritty_change
xresources_change
emacs_change
notify_about_neovim
